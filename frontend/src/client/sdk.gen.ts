// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from '@hey-api/client-fetch';
import type { GetProvidersApiProvidersGetData, GetProvidersApiProvidersGetResponse, GetProvidersApiProvidersGetError, SearchProvidersApiProvidersSearchGetData, SearchProvidersApiProvidersSearchGetResponse, SearchProvidersApiProvidersSearchGetError, SearchCoursesApiCoursesGetData, SearchCoursesApiCoursesGetResponse, SearchCoursesApiCoursesGetError, ReadRootGetData, HealthCheckHealthGetData } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

/**
 * Get Providers
 */
export const getProvidersApiProvidersGet = <ThrowOnError extends boolean = false>(options?: Options<GetProvidersApiProvidersGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetProvidersApiProvidersGetResponse, GetProvidersApiProvidersGetError, ThrowOnError>({
        url: '/api/providers/',
        ...options
    });
};

/**
 * Search Providers
 */
export const searchProvidersApiProvidersSearchGet = <ThrowOnError extends boolean = false>(options: Options<SearchProvidersApiProvidersSearchGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<SearchProvidersApiProvidersSearchGetResponse, SearchProvidersApiProvidersSearchGetError, ThrowOnError>({
        url: '/api/providers/search',
        ...options
    });
};

/**
 * Search Courses
 */
export const searchCoursesApiCoursesGet = <ThrowOnError extends boolean = false>(options: Options<SearchCoursesApiCoursesGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<SearchCoursesApiCoursesGetResponse, SearchCoursesApiCoursesGetError, ThrowOnError>({
        url: '/api/courses/',
        ...options
    });
};

/**
 * Read Root
 */
export const readRootGet = <ThrowOnError extends boolean = false>(options?: Options<ReadRootGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<unknown, unknown, ThrowOnError>({
        url: '/',
        ...options
    });
};

/**
 * Health Check
 */
export const healthCheckHealthGet = <ThrowOnError extends boolean = false>(options?: Options<HealthCheckHealthGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<unknown, unknown, ThrowOnError>({
        url: '/health',
        ...options
    });
};